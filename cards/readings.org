#+TITLE: Readings
#+ROAM_ALIAS: read books
#+OPTIONS: toc:nil

* Books

** DONE How Google works
  + Culture is the one thing to get right.
  + Smart creatives are the core of the company. These are monsters, who can
      do everything and are social people.
  + Hiring is vital, colleagues must be learning animals and smarter than you
    are.
  + Consensus brings opposite point of view. Design someone as owner of
      meetings, transparency (about objectives, results and key results for all
      employees), manager sets deadlines.
  + Innovation: shoot for the moon.
  + Default to open for your technology.
  + Quality of a product is the only dimension on which on should focus.
  + Create new products because of technical insight.

** TODO Work rules from Google
  - Culture makes it right. Vision. Openess.
  - Hire smarter than you (in some meaningful way).
  - Committee hiring.
  - Trust your employees, managers to decide about deadlines and conflict.
  - Performance review: 5 rank
  - OKR: objectives, key, results and transparency about OKR.
  - Manager

    1. Gives actionable feedback that helps improve performance
    2. No micromanagement
    3. Consideration as a person
    4. Keeps team focused on priority results/deliverable.
    5. Share relevant information from his manager and senior leadership.
    6. Meaningful discussion about career development every six months.
    7. Comminucates clear goals.
    8. Has techincal expertise required to effectively manage.
    9. Should be recommended to other coworkers.

  - Learning: focus on learning few things but well. Repetition and
    internalization concepts or teaching material.

** TODO When To Rob A Bank.

** Culture Code.

** TODO The Art of Unix Programming
   Philosophy of linux.

** TODO Principles of financial engineering

** TODO Becoming a better programmer, Pete Goodliffe

  - You.write(code)
     + Favor common convention in style, strive for consistency and clarity,
       good design is better that good presentation.
     + Write less code (elegance is paramount, DRY). Pay attention to logic
       operator to avoid if-else construct, use existing code to avoid bugs,
       delete dead code (never called function, never read variable, unused
       parameters and other types). Comments should explain the /why/. Try to
       use ternary operator as much as possible. Take responsibility of code
       removal and leave code a little better than it was.
     + Improve code by remove it. /Do not write code that you do not need
       now/. A system can improve by removing code. It is inevitable that dead
       code arises. Zombie code makes your life harder.

** TODO Code Craft, Pete Goodliffe

** TODO Why I left Goldman Sachs

** TODO Lords of Finance

** TODO The Finance Curse: How global finance is making us all poorer

** SICP


** See also (generated)

   - 

